{
  "checksums": {
    "spec/unit/puppet/parser/functions/validate_array_spec.rb": "9ff22cd8e660e244abac8993fc45037b",
    "spec/spec_helper.rb": "ca19ec4f451ebc7fdb035b52eae6e909",
    "lib/puppet/parser/functions/validate_re.rb": "b47784856ff536e058b8cf5a46775406",
    "lib/puppet/parser/functions/validate_bool.rb": "580f272ec5949c8779dfa4e374156cd4",
    "CHANGELOG": "852b25bf64e8840b512d94537c7cc987",
    "spec/unit/puppet/parser/functions/validate_bool_spec.rb": "7de673f1da799e5cf4ce4203eac18a93",
    "spec/unit/puppet/parser/functions/getvar_spec.rb": "99880c2d16b329c872d22fe15bb05293",
    "LICENSE": "2a944942e1496af1886903d274dedb13",
    "lib/puppet/parser/functions/merge.rb": "ddfee32b8320796b515ba327e4aaca59",
    "lib/puppet/parser/functions/validate_hash.rb": "c2e96fae77ba2e3aff14342b772859e0",
    "manifests/stages.pp": "8ed6fde27cfe2760395579a0536ec0a4",
    "lib/puppet/parser/functions/validate_string.rb": "32b4dc2a12a87c36ffa266fb82eac022",
    "lib/puppet/parser/functions/has_key.rb": "9bc3da978451869e13f531dad16c6535",
    "RELEASE_PROCESS.markdown": "e2d2140c3719f692899f73a754175d78",
    "lib/puppet/parser/functions/getvar.rb": "aa039497b118e0b404ca2e256b3af199",
    "tests/init.pp": "1d98070412c76824e66db4b7eb74d433",
    "spec/unit/puppet/parser/functions/validate_hash_spec.rb": "9d04db99b341c8e8a96a2e3594e15e09",
    "lib/puppet/type/anchor.rb": "655f17627ee8c259f536d8426627b2c5",
    "tests/whole_line.pp": "9982c326ac3a0802236d6bdc56829214",
    "spec/unit/puppet/type/whole_line_spec.rb": "d8d169ffa1357d136cfcb1c3de40eefd",
    "spec/unit/puppet/parser/functions/merge_spec.rb": "169ba6a18997b25250e893e07920e5eb",
    "README.markdown": "e60e2188ca0561f27173be7839560381",
    "lib/puppet/type/whole_line.rb": "ee44c669d9aff5512c75876e49b6f713",
    "spec/spec.opts": "a600ded995d948e393fbe2320ba8e51c",
    "lib/puppet/parser/functions/validate_array.rb": "eb5169b3f834e2d1fc550548158c9b38",
    "spec/unit/puppet/type/anchor_spec.rb": "a5478a72a7fab2d215f39982a9230c18",
    "spec/unit/puppet/provider/whole_line/ruby_spec.rb": "77e56b01fc7b88af7c08ca3586d751b0",
    "spec/unit/puppet/parser/functions/validate_string_spec.rb": "2886898011792249e80837c6791639ba",
    "spec/unit/puppet/parser/functions/has_key_spec.rb": "3ecc38a150d685db2b766c4d91ac77b4",
    "Modulefile": "2de68f7978366a7fd555d8433642bc5b",
    "manifests/init.pp": "3e441c929ebcb711b2544dd5b90f5baa",
    "lib/puppet/provider/whole_line/ruby.rb": "81b385843c8232261b1bfb2b7913d8b5",
    "lib/puppet/parser/functions/loadyaml.rb": "0b776522b611adf1e4e5190a47ec6874"
  },
  "author": "puppetlabs",
  "description": "Standard Library for Puppet Modules",
  "source": "git://github.com/puppetlabs/puppetlabs-stdlib",
  "license": "Apache 2.0",
  "types": [
    {
      "properties": [

      ],
      "doc": "  A simple resource type intended to be used as an anchor in a composite class.\n\n      class ntp {\n        class { 'ntp::package': }\n        -> class { 'ntp::config': }\n        -> class { 'ntp::service': }\n\n        # These two resources \"anchor\" the composed classes\n        # such that the end user may use \"require\" and \"before\"\n        # relationships with Class['ntp']\n        anchor { 'ntp::begin': }   -> class  { 'ntp::package': }\n        class  { 'ntp::service': } -> anchor { 'ntp::end': }\n      }\n\n  This resource allows all of the classes in the ntp module to be contained\n  within the ntp class from a dependency management point of view.\n\n  This allows the end user of the ntp module to establish require and before\n  relationships easily:\n\n      class { 'ntp': } -> class { 'mcollective': }\n      class { 'mcollective': } -> class { 'ntp': }\n\n",
      "parameters": [
        {
          "doc": "The name of the anchor resource.",
          "name": "name"
        }
      ],
      "name": "anchor"
    },
    {
      "properties": [
        {
          "doc": "  Valid values are `present`.",
          "name": "ensure"
        }
      ],
      "doc": "  Type that can append whole a line to a file if it does not already contain it.\n\n  Example:\n\n  whole_line { 'sudo_rule':\n    path => '/etc/sudoers',\n    line => '%admin ALL=(ALL) ALL',\n  }\n\n",
      "parameters": [
        {
          "doc": "arbitrary name used as identity",
          "name": "name"
        },
        {
          "doc": "The line to be appended to the path.",
          "name": "line"
        },
        {
          "doc": "File to possibly append a line to.",
          "name": "path"
        }
      ],
      "name": "whole_line",
      "providers": [
        {
          "doc": "    ",
          "name": "ruby"
        }
      ]
    }
  ],
  "name": "puppetlabs-stdlib",
  "project_page": "https://github.com/puppetlabs/puppetlabs-stdlib",
  "version": "1.1.0",
  "dependencies": [

  ],
  "summary": "Puppet Module Standard Library"
}